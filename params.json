{"name":"Hello-ghpages","tagline":"learn create github repository deploy to github pages ","body":"### This is my first try to create a page for me to use ghpages\r\n\r\n### Welcome to GitHub Pages.\r\n\r\nThis automatic page generator is the easiest way to create beautiful pages for all of your projects. Author your page content here [using GitHub Flavored Markdown](https://guides.github.com/features/mastering-markdown/), select a template crafted by a designer, and publish. After your page is generated, you can check out the new `gh-pages` branch locally. If you’re using GitHub Desktop, simply sync your repository and you’ll see the new branch.\r\n\r\n### Designer Templates### # \r\nWe’ve crafted some handsome templates for you to use. Go ahead and click 'Continue to layouts' to browse through them. You can easily go back to edit your page before publishing. After publishing your page, you can revisit the page generator and switch to another theme. Your Page content will be preserved.\r\n\r\n### Creating pages manually\r\nIf you prefer to not use the automatic generator, push a branch named `gh-pages` to your repository to create a page manually. In addition to supporting regular HTML content, GitHub Pages support Jekyll, a simple, blog aware static site generator. Jekyll makes it easy to create site-wide headers and footers without having to copy them across every page. It also offers intelligent blog support and other advanced templating features.\r\n\r\n### Authors and Contributors\r\nYou can @mention a GitHub username to generate a link to their profile. The resulting `<a>` element will link to the contributor’s GitHub Profile. For example: In 2007, Chris Wanstrath (@defunkt), PJ Hyett (@pjhyett), and Tom Preston-Werner (@mojombo) founded GitHub.\r\n\r\n### Support or Contact\r\nHaving trouble with Pages? Check out our [documentation](https://help.github.com/pages) or [contact support](https://github.com/contact) and we’ll help you sort it out.\r\n\r\n史上最详细“截图”搭建Hexo博客并部署到Github\r\n|浏览：2512|更新：2015-01-25 23:47|标签：截图 \r\n史上最详细“截图”搭建Hexo博客并部署到Github1史上最详细“截图”搭建Hexo博客并部署到Github2史上最详细“截图”搭建Hexo博客并部署到Github3史上最详细“截图”搭建Hexo博客并部署到Github4史上最详细“截图”搭建Hexo博客并部署到Github5史上最详细“截图”搭建Hexo博客并部署到Github6史上最详细“截图”搭建Hexo博客并部署到Github7\r\n分步阅读\r\n一键约师傅\r\n百度师傅最快的到家服务，最优质的电脑清灰！\r\n大家也搭建过博客，很多时候，按着教程来做就可以了，但是我当时为了搭建Hexo博客并部署到Github，走了不少弯路。现在终于搭建出来了，为了帮助大家，我决定写一篇“史上最详细“截图”搭建Hexo博客并部署到Github”。\r\n\r\n史上最详细“截图”搭建Hexo博客并部署到Github\r\n工具/原料\r\nWindows（Mac也是差不多，可参照）\r\nGit\r\nNode.js\r\n安装Hexo\r\n1\r\n利用 npm 命令即可安装。在任意位置点击鼠标右键，选择Git Base。\r\n史上最详细“截图”搭建Hexo博客并部署到Github\r\n2\r\n输入命令：\r\nnpm install -g hexo\r\n注意：-g是指全局安装hexo。\r\nEND\r\n创建Hexo文件夹\r\n安装完成后，在你喜爱的文件夹下（如C:\\Hexo），执行以下指令(在C:\\Hexo内点击鼠标右键，选择Git Bash)，Hexo 即会自动在目标文件夹建立网站所需要的所有文件。\r\nhexo init\r\nEND\r\n安装依赖包\r\nnpm install\r\nEND\r\n本地查看\r\n现在我们已经搭建起本地的hexo博客了，执行以下命令(在C:\\Hexo)，然后到浏览器输入localhost:4000看看。\r\nhexo generate\r\nhexo server\r\n史上最详细“截图”搭建Hexo博客并部署到Github\r\nEND\r\n注册Github账号\r\n这里不演示了。\r\nEND\r\n创建Repository\r\n创建的时候注意Repository的名字。比如我的Github账号是angelen10，那么我应该创建的Repository的名字是：angelen10.github.io。\r\n史上最详细“截图”搭建Hexo博客并部署到Github\r\nEND\r\n修改配置文件\r\n1\r\n到你刚刚创建的Repository下，找到以下内容：\r\n史上最详细“截图”搭建Hexo博客并部署到Github\r\n2\r\n先点击HTTPS，然后复制里面的地址。然后编辑_config.yml文件（在C:\\Hexo下）。\r\n史上最详细“截图”搭建Hexo博客并部署到Github\r\n3\r\n修改文件里面的deploy。其中的repository就改成你刚刚复制的地址。保存这个文件。\r\n史上最详细“截图”搭建Hexo博客并部署到Github\r\nEND\r\n设置SSH keys\r\n1\r\n在Git Bash输入以下指令（任意位置点击鼠标右键），检查是否已经存在了SSH keys。\r\nls -al ~/.ssh\r\n2\r\n如果不存在就没有关系，如果存在的话，直接删除.ssh文件夹里面所有文件：\r\n史上最详细“截图”搭建Hexo博客并部署到Github\r\n3\r\n输入以下指令（邮箱就是你注册Github时候的邮箱）后，回车：\r\nssh-keygen -t rsa -C \"angelen10@163.com\"\r\n史上最详细“截图”搭建Hexo博客并部署到Github\r\n4\r\n然后它会提示要你输入passphrase（如上图，我没有输入直接回车，如果你输入的话，要记得，到时候会用到）。之后，如果出现类似下图：\r\n史上最详细“截图”搭建Hexo博客并部署到Github\r\n5\r\n然后键入以下指令：\r\nssh-agent -s\r\n史上最详细“截图”搭建Hexo博客并部署到Github\r\n6\r\n继续输入指令：\r\nssh-add ~/.ssh/id_rsa\r\n7\r\n输入之后，在我这里是出错了，不知道你的有没有出错。\r\n史上最详细“截图”搭建Hexo博客并部署到Github\r\n8\r\n如果你的也是这样子出错了的话，就输入以下指令：\r\neval `ssh-agent -s`\r\nssh-add\r\n史上最详细“截图”搭建Hexo博客并部署到Github\r\n9\r\n到了这一步，就可以添加SSH key到你的Github账户了。键入以下指令，拷贝Key（先拷贝了，等一下可以直接粘贴）：\r\nclip < ~/.ssh/id_rsa.pub\r\n10\r\n然后到Github里面，点击右上角的设置图标：\r\n史上最详细“截图”搭建Hexo博客并部署到Github\r\n11\r\n在Settings sidebar那里，点击SSH keys：\r\n史上最详细“截图”搭建Hexo博客并部署到Github\r\n12\r\n点击Add SSH key：\r\n史上最详细“截图”搭建Hexo博客并部署到Github\r\n13\r\n输入Title，作为这个key的描述吧（你可以输入Personal MacBook Air，瞬间高大上）\r\n史上最详细“截图”搭建Hexo博客并部署到Github\r\n14\r\n然后这个Key就是刚刚拷贝的，你直接粘贴就好（也可以文本打开以下文件）：\r\n史上最详细“截图”搭建Hexo博客并部署到Github\r\n15\r\n点击Add Key：\r\n史上最详细“截图”搭建Hexo博客并部署到Github\r\n16\r\n输入你的Github密码即可完成SSH Key的添加。嗯，最后还是测试一下吧，键入以下命令：\r\nssh -T git@github.com\r\n史上最详细“截图”搭建Hexo博客并部署到Github\r\n17\r\n你可能会看到有警告，没事，输入“yes”就好。\r\nEND\r\n完成部署\r\n最后一步，快要成功了，键入指令：\r\nhexo generate\r\nhexo deploy\r\nOK，我们的博客就已经完全搭建起来了，在浏览器输入（当然，是你的用户名）：\r\nhttp://angelen10.github.io/\r\n史上最详细“截图”搭建Hexo博客并部署到Github\r\n3\r\n注意：每次修改本地文件后，需要键入hexo generate才能保存。每次使用命令时，都要在C:\\Hexo目录下。每次想要上传文件到Github时，就应该先键入hexo generate保存之后，再键入hexo deploy。大概成功之后是酱紫的：\r\n史上最详细“截图”搭建Hexo博客并部署到Github\r\n4\r\n对了，记住上图的Username是你的Github账号名称，而不是邮箱；Password就是你的Github的密码。\r\n","google":"UA-000000-02","note":"Don't delete this file! It's used internally to help with page regeneration."}